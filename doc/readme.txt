1. Хранилище

priceChecker_task: { when: 1000, periodInMinutes: 1 }
priceChecker_updateObject:  { lastTime: new Date().getTime(), lock: true }
priceChecker_products: [{
	article: 111111,
	name: 'рюкзак такойто',
	img: 'JjSdfdks62Hk*4JGnKJg$T',
	url: '',
	nextUpdate: '22-12-2016 13:58 GMT+4',
	try: 1
	
	Или
	
	'111111':  {
		name: 'рюкзак такойто',
		img: 'JjSdfdks62Hk*4JGnKJg$T',
		url: '',
		nextUpdate: '22-12-2016 13:58 GMT+4',
		try: 1
	}
}]

priceChecker_prices: [{
	'111111': {
		prices: [ 100, 200, 300 ]
		//,
		//lasUpdateOn: '22-12-2016 13:58 GMT+4',
	}
}]

priceChecker_options: {
	maxProducts: 100,
	maxPrices: 7,
	updateInterval: 2
	missingProductCheckPeriodDays: 3
	deleteProductAfterChecks: 7
}

2. Фоновая загрузка цен
	 <Периодический запуск скедулера>	 
	 - Скедулер проверяет, когда загрузка был запущена прошлый раз и принимает решение о запуске/не запуске.
	 - Блокировка загрузки
	 - Формирует список товаров для проверки PRODUCTS_TO_CHECK в соответствии с полем nextUpdate каждого товара.
	 <Перебирает в цикле PRODUCTS_TO_CHECK>
		 - Скачивает страничку товара
		 - Парсит скачанную страничку, извлекает данные и добавляет во временный список NEW_PRICES с текущими данными по продукту 
	 <Окончание цикла>
	 - Выполняет метод UPDATE PRODUCTS, на вход подается список NEW_PRICES.
	 - Обновляет дату поле nextUpdate у каждого товара из PRODUCTS_TO_CHECK
	 - Снятие блокировки загрузки

3. Контент скрипт.
	- Находит подходящий элемент на странице
	- Добавляет после него кнопку "отслеживать"
	- После нажатия кнопки находит на странице данные о товаре
	- Посылает сообщение в фоновую страницу с данными о товаре
	
4. UPDATE_PRODUCTS
	<Перебирает в цикле NEW_PRICES>
	- Выбирает объект из priceChecker_prices по артикулу.
	- Выполняется UPDATE_PRICE(article, NEW_PRICES[i])	
	<Окончание цикла>
	- Выполнить метод REMOVE_OUTDATED(NEW_PRICES)
	- Если были изменены цены на некоторые товары, то изменить иконку расширения, выдать уведомление "Изменилась цена на некоторые товары". 
	- Иначе если были удалены некоторые товары, то изменить иконку расширения, выдать уведомление "Отслеживание некоторых товаров было прекращено"
	
	
5. Метод для отслеживания данных о товаре SAVE_PRODUCT
	- Принимает из контент скрипта сообщение с данными о товаре
	- Если в списке priceChecker_products больше чем priceChecker_options.maxProducts элементов, то выдать ошибку: "В список отслеживания можно добавить не более priceChecker_options.maxProducts товаров".
	- Просматривает priceChecker_products на предмет уже имеющегося в списке. Если этот товар уже имеется, то выполняет UPDATE_PRICE цены
	- Если нет такого продукта, то добавляет в список данные и выдает сообщение "Товар добавлен".
	- Если в списке priceChecker_products после добавления стало ровно priceChecker_options.maxProducts элементов, то выдать сообщение: "Товар добавлен. Внимание: в списке отслеживания 0 свободных ячеек".
	
6. Метод обновления цены UPDATE_PRICE(article, newPrice)
	- Если список цен для article пуст, то добавить в список новую цену. Выход.
	- Иначе
		- Если newPrice == null, то 
				- Если список цен для article не пуст и последняя цена в списке == null, то ничего не делаем. Выход.
				- Если список цен для article не пуст и последняя цена в списке != null, то добавляем в список null. Выход.
		- Если newPrice != null, то 
				- Если последняя цена == null, то записываем newPrice на место null. Выход.
				- Если последняя цена != null, то
					- Если размер списка меньше priceChecker_options.maxPrices
					- Если размер списка равен или больше priceChecker_options.maxPrices, то берем новый список из элементов имеющегося от 2 до n и записываем его в priceChecker_prices
				- Добавляем новую цену в конец
	
7. Метод для удаления продукта из списка отслеживания DELETE_PRODUCT	
	- Удаляет данные о продукте из priceChecker_products и priceChecker_prices и обновляет POPUP
	
8. REMOVE_OUTDATED(NEW_PRICES)
	<Перебор в цикле priceChecker_prices>
		- Если последняя цена в списке == null и try >= priceChecker_options.deleteProductAfterChecks, то удалить товар из priceChecker_prices и 
	<Конец цикла>

9. POPUP.
	- При открытии формируется на основании данных из priceChecker_products и priceChecker_prices
	- Картинка является ссылкой на страницу товара в магазине
	- Список сортируется по дате обновления по убыванию
	- Строчки товаров с изменившимися ценами фон подсвечивается зеленым или красным в зависимости от того цена выросла или упала, сперва зеленые сверху, потом красные, потом все остальные.

10. Страница OPTIONS.
	- После нажатия на кнопку расширения изменить ее картинку на стандартную (на случай, если она менялась)
	- Два движка со значениями priceChecker_options.maxProducts и priceChecker_options.maxPrices.
	- Выпадающий список с настройкой периодичности проверки цен priceChecker_options.updateInterval ("Периодичность проверки цен... ") 1 час, 2 часа, 4 часа, 1 день. По умолчанию каждые два часа.
	- Поле ввода числа с настройкой периодичности проверки появления товара в наличии priceChecker_options.deleteProductAfterChecks (товар с отсутствующей ценой).  "Периодичность проверки наличия товара ... дней"
	- Кнопка применить и отмена.